apiVersion: apps/v1
kind: Deployment
metadata:
  name: object-detection-worker
  namespace: object-detection
  labels:
    app: object-detection-worker
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: object-detection-worker
  template:
    metadata:
      labels:
        app: object-detection-worker
        version: v1
    spec:
      serviceAccountName: object-detection-worker
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: object-detection-worker
        image: IMAGE_PLACEHOLDER
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: GCP_PROJECT_ID
          valueFrom:
            configMapKeyRef:
              name: object-detection-config
              key: GCP_PROJECT_ID
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: object-detection-secrets
              key: REDIS_URL
        - name: GCS_BUCKET
          valueFrom:
            configMapKeyRef:
              name: object-detection-config
              key: GCS_BUCKET
        envFrom:
        - configMapRef:
            name: object-detection-config
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "import sys; sys.exit(0)"
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - python
            - -c
            - "import sys; sys.exit(0)"
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/.cache
        - name: gcp-service-account
          mountPath: /var/secrets/google
          readOnly: true
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      - name: gcp-service-account
        secret:
          secretName: gcp-service-account-key
          optional: true
      nodeSelector:
        kubernetes.io/arch: amd64
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300